const
  m =  7,
  n = 85;

var
  x, y, z, q, r;

procedure multiply(foo1, foo2)
var a, b;

begin
  a := x;
  b := y;
  z := 0;
  while b > 0 do begin
    if odd b then z := z + a;
    a := 2 * a;
    b := b / 2
  end
end;

procedure divide()
var w;

   procedure a()
   begin
        call multiply(3, 4)
   end;

   procedure multiply(a, b)
   begin
        a := b
   end;

   procedure b()
   begin
        call multiply(3, 4)
   end;

begin
  r := x;
  q := 0;
  w := y;
  while w <= r do w := 2 * w;
  while w > y do begin
    q := 2 * q;
    w := w / 2;
    if w <= r then begin
      r := r - w;
      q := q + 1
    end
  end
end;

procedure gcd()
var f, g;
begin
  f := 5;
  g := 10;
  while f # g do begin
    ! g;
    g := g-1
  end;
  z := f
end;

begin
  x := m;
  y := n;
  call multiply(42, x+4);
  x := 25;
  y :=  3;
  call divide();
  x := 84;
  y := 36;
  call gcd()
end.